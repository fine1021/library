apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'

def versionMajor = 1
def versionMinor = 0
def versionPatch = 6

android {
    compileSdkVersion 25
    buildToolsVersion '27.0.3'
    defaultConfig {
        minSdkVersion 10
        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
        ignoreWarnings true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    sourceSets {
        main {
            java.srcDirs 'src/main/java'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:support-v4:25.4.0'
}

ext {
    // installv1
    bintrayRepo = 'maven'
    bintrayName = 'support'

    // library
    libraryGroupId = 'com.yxkang.android'
    libraryVersion = "${versionMajor}.${versionMinor}.${versionPatch}"
    libraryName = 'support'
    libraryArtifact = 'support'
    libraryUserOrg = 'fine1021'
    libraryDescription = 'a support library for android'

    // url
    siteUrl = 'https://github.com/fine1021/library'
    gitUrl = 'https://github.com/fine1021/library.git'
    issueUrl = 'https://github.com/fine1021/library/issues'

    // developer
    developerId = 'fine1021'
    developerName = 'fine'
    developerEmail = 'fine1021@gmail.com'

    // licenses
    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}


task buildReleaseJar(dependsOn: ['compileReleaseJavaWithJavac'], type: Jar) {

    // appendix = "demo"
    baseName = "support"
    version = project.libraryVersion
    classifier = "release"

    // 后缀名
    extension = "jar"
    // 最终的 Jar 包名，如果没设置，默认为 [baseName]-[appendix]-[version]-[classifier].[extension]
    // archiveName = "support.jar"

    // 需打包的资源所在的路径集
    def srcClassDir = [project.buildDir.absolutePath + "/intermediates/classes/release"];
    // 初始化资源路径集
    from srcClassDir

    // 去除路径集下部分的资源
    exclude "com/yxkang/android/view"
    exclude "com/yxkang/android/BuildConfig.class"
    exclude "**/R.class"
    exclude "**/R\$*.class"

    // 只导入资源路径集下的部分资源
    include "com/yxkang/android/**/*.class"

    // 注: exclude include 支持可变长参数
}

/*task buildProguardJar(dependsOn: ['buildReleaseJar'], type: ProGuardTask) {
    // Android 默认的 proguard 文件
    // configuration android.getDefaultProguardFile('proguard-android.txt')
    // 指定某个混淆文件，根据该文件对 Jar 进行混淆
    configuration 'proguard-rules.pro'

    String inJar = buildReleaseJar.archivePath.getAbsolutePath()
    // 输入 jar
    injars inJar
    // 打印输入jar的路径
    println inJar

    String outJar = inJar.substring(0, inJar.lastIndexOf('\\')) + "\\proguard-${buildReleaseJar.archiveName}"
    // 输出 jar
    outjars outJar
    // 打印输出jar的路径
    println outJar
}*/



Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

publish {
    userOrg = libraryUserOrg
    repoName = bintrayRepo
    groupId = libraryGroupId
    artifactId = libraryArtifact
    publishVersion = libraryVersion
    desc = libraryDescription
    website = 'https://github.com/fine1021/library'
    issueTracker = "${website}/issues"
    repository = "${website}.git"
    bintrayUser = properties.getProperty("bintray.user")
    bintrayKey = properties.getProperty("bintray.apikey")
    dryRun = false
}

//apply from: './installv1.gradle'
//apply from: './bintrayv1.gradle'